// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"github.com/KatharsisTL/transport-generator-example/internal/api/service"
	"github.com/gofiber/fiber/v2"
	"github.com/rs/zerolog"
)

type httpHello struct {
	log          zerolog.Logger
	errorHandler ErrorHandler
	svc          *serverHello
	base         service.Hello
}

func NewHello(log zerolog.Logger, svcHello service.Hello) (srv *httpHello) {

	srv = &httpHello{
		base: svcHello,
		log:  log,
		svc:  newServerHello(svcHello),
	}
	return
}

func (http httpHello) Service() MiddlewareSetHello {
	return http.svc
}

func (http *httpHello) WithLog(log zerolog.Logger) *httpHello {
	http.svc.WithLog(log)
	return http
}

func (http *httpHello) WithTrace() *httpHello {
	http.svc.WithTrace()
	return http
}

func (http *httpHello) WithMetrics() *httpHello {
	http.svc.WithMetrics()
	return http
}

func (http *httpHello) WithErrorHandler(handler ErrorHandler) *httpHello {
	http.errorHandler = handler
	return http
}

func (http *httpHello) SetRoutes(route *fiber.App) {
	route.Post("/hello", http.serveBatch)
	route.Post("/hello/hello", http.serveHello)
}
